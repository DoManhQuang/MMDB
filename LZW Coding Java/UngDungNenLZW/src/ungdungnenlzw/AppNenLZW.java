/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ungdungnenlzw;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.io.Writer;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;

/**
 *
 * @author trongson
 */
public class AppNenLZW extends javax.swing.JFrame {

    /**
     * Creates new form AppNenLZW
     */
    ArrayList<Character> listKyTu = new ArrayList<>();
    ArrayList<Integer> ketQua = new ArrayList<>();
    String duongDanDayDu;

    public AppNenLZW() {
        initComponents();
        CenteredFrame(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jGiaiNen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaKetQua = new javax.swing.JTextArea();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Nhóm 3 _ Thuật toán LZW");
        setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Chọn File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Nén File");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Hãy chọn file để nén.");

        jGiaiNen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jGiaiNen.setText("Giải nén");
        jGiaiNen.setActionCommand("GiaiNen");
        jGiaiNen.setEnabled(false);
        jGiaiNen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGiaiNenActionPerformed(evt);
            }
        });

        jTextAreaKetQua.setColumns(20);
        jTextAreaKetQua.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jTextAreaKetQua.setRows(5);
        jScrollPane1.setViewportView(jTextAreaKetQua);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jGiaiNen, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 105, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)))
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jGiaiNen, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int luaChon = chooser.showOpenDialog(this);
        if (luaChon == JFileChooser.APPROVE_OPTION) {
            duongDanDayDu = chooser.getSelectedFile().toString();
            String[] mang = duongDanDayDu.split("\\\\");
            String tenFile = mang[mang.length - 1];

            LayDuLieuTuFile(duongDanDayDu, listKyTu);
//            for (int i = 0; i < listKyTu.size(); i++) {
//                System.out.print(listKyTu.get(i)+"\t");
//            }
            jLabel1.setText("Đã chọn file: " + tenFile);
            jButton2.setEnabled(rootPaneCheckingEnabled);
            jGiaiNen.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn gì cả");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int size = listKyTu.size();
        HashMap<Integer, String> stringTable = new HashMap<>();
        ArrayList<Integer> outputCode = new ArrayList<>();
        String P = Character.toString(listKyTu.get(0));
        for (int i = 1; i < listKyTu.size(); i++) {
            char C = listKyTu.get(i);
            if (stringTable.containsValue(P + C)) {
                P = P + C;
            } else {
                outputCode.add(outputForCode(stringTable, P));
                if (256 + stringTable.size() <= 4026) {
                    stringTable.put(256 + stringTable.size(), P + C);
                }
                P = Character.toString(C);
            }
        }
        outputCode.add(outputForCode(stringTable, P));

        ketQua = outputCode;
        jTextAreaKetQua.setText("Kết quả sau khi nén: " + ketQua.toString());
        ghiDuLieuRaFile(duongDanDayDu, ketQua);
        JOptionPane.showMessageDialog(rootPane, "Đã nén thành công 1 file");
        jButton2.setEnabled(true);
        jGiaiNen.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jGiaiNenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGiaiNenActionPerformed
        // TODO add your handling code here:
        int[] code = new int[ketQua.size()];
        layDuLieuDeGiaiNen(code, duongDanDayDu);
        String chuoiGiaiNen = "";
//        for (int i = 0; i < code.length; i++) {
//            chuoiGiaiNen += code[i];
//        }
//        jTextAreaKetQua.setText(chuoiGiaiNen);
        HashMap<Integer, String> table = new HashMap<>();
        for (int i = 0; i < 255; i++) {
            table.put(i, (char) i + "");
        }
        //table.put(-1, null);
        int old = code[0];
        String c = "";
        String s = "";
        int count = 256;
        chuoiGiaiNen += (char) old;
        System.out.println("old : "+old);
        for (int i = 0; i < code.length - 1; i++) {
            System.out.println(i+"/================================");
            int New = code[i + 1];
            System.out.println("New : "+New);
            if (KiemtraTable(table, New) == false && !c.equals(null)) {
                s = Translation(old, table);
                
               char mang[] = s.toCharArray();
                c = mang[0] + "";
                s = s + c;
                System.out.println("C trong if : "+c);
                System.out.println("S trong if : "+s);
            } else {
                s = Translation(New, table);
                System.out.println("S trong else : "+s);
            }
            chuoiGiaiNen += s;
          char  mang[] = s.toCharArray();
            c = mang[0] + "";
            System.out.println("C ngoài : "+c);
            table.put(count, Translation(old, table) + c);
            System.out.println("Count : "+count+"Dịch : "+(Translation(old, table) + c));
            old = New;
            System.out.println("Old = new : "+old);
            count++;
            System.out.println("/================================");
        }
        jTextAreaKetQua.setText(chuoiGiaiNen);
        String trim = chuoiGiaiNen.trim();
        ghiDuLieuRaFileGiaiNen(duongDanDayDu, trim);
        JOptionPane.showMessageDialog(rootPane, "Đã giải nén thành công");
    }//GEN-LAST:event_jGiaiNenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppNenLZW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppNenLZW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppNenLZW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppNenLZW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppNenLZW().setVisible(true);
            }
        });
    }

    public static void LayDuLieuTuFile(String duongDan, ArrayList<Character> listKyTu) {
        FileReader fr = null;
        try {
            fr = new FileReader(duongDan);
            BufferedReader br = new BufferedReader(fr);
            String s;
            while ((s = br.readLine()) != null) {
                char[] mang = s.toCharArray();
                for (int i = 0; i < mang.length; i++) {
                    listKyTu.add(mang[i]);
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AppNenLZW.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AppNenLZW.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(AppNenLZW.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public ArrayList<Integer> nenDuLieuLZW(ArrayList<Character> listKyTu) {
        // String table
        HashMap<Integer, String> stringTable = new HashMap<>();
        ArrayList<Integer> outputCode = new ArrayList<>();
        String P = Character.toString(listKyTu.get(0));
        for (int i = 1; i < listKyTu.size(); i++) {
            char C = listKyTu.get(i);
            if (stringTable.containsValue(P + C)) {
                P = P + C;
            } else {
                outputCode.add(outputForCode(stringTable, P));
                if (256 + stringTable.size() <= 4026) {
                    stringTable.put(256 + stringTable.size(), P + C);
                }
                P = Character.toString(C);
            }
        }
        outputCode.add(outputForCode(stringTable, P));
        return outputCode;
    }

    public static Integer outputForCode(HashMap<Integer, String> stringTable, String P) {
        // tìm mã code trong bảng string table 
        // nếu tìm thấy thì trả về mã code của chuỗi đó
        // nếu ko tìm thấy thì chả về mã code của ký tự đó trong bảng mã ascii
        if (maCodeCuaChuoi(stringTable, P) != -1) {
            return maCodeCuaChuoi(stringTable, P);
        }
        return Integer.valueOf((int) P.charAt(0));
    }

    public static Integer maCodeCuaChuoi(HashMap<Integer, String> stringTable, String chuoiCanLayMa) {
        for (Map.Entry item : stringTable.entrySet()) {
            if (item.getValue().equals(chuoiCanLayMa)) {
                return (Integer) item.getKey();
            }
        }
        return -1;
    }

    public static void ghiDuLieuRaFile(String duongDan, ArrayList<Integer> ketQuaSauKhiNen) {
        String[] duongDanSauKhiNen = duongDan.split("\\.");
        try {
            RandomAccessFile randomAccessFile = new RandomAccessFile(duongDanSauKhiNen[0].concat(".lzwNhom3"), "rw");
            for (int i = 0; i < ketQuaSauKhiNen.size(); i++) {
                randomAccessFile.writeShort(ketQuaSauKhiNen.get(i));
//                System.out.print("<" + ketQuaSauKhiNen.get(i) + ">");
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AppNenLZW.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AppNenLZW.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void ghiDuLieuRaFileGiaiNen(String duongDan, String ketQuaSauKhiNen) {
        String[] duongDanSauKhiNen = duongDan.split("\\.");
        BufferedWriter bufferedWriter = null;
        FileWriter fileWriter = null;
        try {
//            RandomAccessFile randomAccessFile = new RandomAccessFile(duongDanSauKhiNen[0].concat("_giainen.txt"), "rw");
//            randomAccessFile.writeUTF(ketQuaSauKhiNen);
//            char []chuoi = ketQuaSauKhiNen.toCharArray();
//            for (int i = 0; i < chuoi.length; i++) {
//                //randomAccessFile.writeShort(ketQuaSauKhiNen.get(i));
////                System.out.print("<" + ketQuaSauKhiNen.get(i) + ">");
//                randomAccessFile.writeChar((int)chuoi[i]);
//            }
             fileWriter = new FileWriter(duongDanSauKhiNen[0].concat("_giainen.txt"), false);
             fileWriter.write(ketQuaSauKhiNen);
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
        finally{
            try {
                fileWriter.close();
            } catch (IOException ex) {
                Logger.getLogger(AppNenLZW.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public static void layDuLieuDeGiaiNen(int[] code, String duongDan) {
        String[] duongDanSauKhiNen = duongDan.split("\\.");
        System.out.println(duongDanSauKhiNen[0].concat(".lzwNhom3"));
        try {
            RandomAccessFile randomAccessFile = new RandomAccessFile(duongDanSauKhiNen[0].concat(".lzwNhom3"), "r");
            int solan = (int) randomAccessFile.length();
            for (int i = 0; i < solan; i++) {
                code[i] = (int) randomAccessFile.readShort();
                System.out.println(code[i]);
            }
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
    }

    public void CenteredFrame(javax.swing.JFrame objFrame) {
        Dimension objDimension = Toolkit.getDefaultToolkit().getScreenSize();
        int iCoordX = (objDimension.width - objFrame.getWidth()) / 2;
        int iCoordY = (objDimension.height - objFrame.getHeight()) / 2;
        objFrame.setLocation(iCoordX, iCoordY);
    }

    public static boolean KiemtraTable(HashMap<Integer, String> table, int New) {
        for (Map.Entry item : table.entrySet()) {
            if (item.getKey().equals(New)) {
                return true;
            }
        }
        return false;
    }

    public static String Translation(int old, HashMap<Integer, String> table) {
        for (Map.Entry item : table.entrySet()) {
            if (item.getKey().equals(old)) {
                return item.getValue().toString();
            }
        }
        return Character.toString((char) old);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jGiaiNen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaKetQua;
    // End of variables declaration//GEN-END:variables
}
